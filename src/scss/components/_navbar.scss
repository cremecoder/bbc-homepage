@use '../abstracts/colors' as clr;
/* Navigation styles */

header {
  margin: 0 auto;
  overflow-x: hidden;
  font-weight: var(--fw-800);
}

.nav {
  border-bottom: 1px solid var(--clr-neutral-500);
  #{&}-links {
    display: flex;
    max-width: 1300px;
    margin: 0 auto;

    & > :first-child {
      border-left: none;
      flex-basis: 1%;
      & > * {
        float: right;
      }
    }

    & > :nth-child(3) {
      flex: 0 0 1%;
    }

    & > :last-child {
      border-right: none;
      flex-basis: 1%;
    }
  }

  &-item {
    padding: 12px 0.5em 0 8px;
    border-left: 1px solid var(--clr-neutral-500);
    border-right: 1px solid var(--clr-neutral-500);
    border-bottom: 5px solid transparent;
    cursor: pointer;
    flex-grow: 1;
    white-space: nowrap;

    a {
      padding: 0.25em 0.75em;
      color: inherit;
      display: flex;
    }
  }

  &--inner {
    display: flex;
    flex-wrap: wrap;
  }

  &-hidden {
    padding: 1rem 0.5rem;
    border-bottom: 1px solid var(--clr-neutral-500);

    &__inner {
      max-width: 1300px;
      margin: 0 auto;
      padding: 1rem;
      columns: 5.8rem auto;
      gap: 1.5rem;
      font-weight: var(--fw-800);
    }

    &--item {
      color: var(--clr-neutral-700);
      &:hover {
        color: var(--clr-neutral-300);
        background-color: var(--clr-neutral-700);
      }
    }
  }
}

@each $color, $value in clr.$colors {
  [data-#{$color}] {
    &:hover,
    &:active {
      border-bottom: 5px solid var(--clr-#{$color});
    }
  }
}

.hide-item {
  padding: 0;
  margin: 0;
  border: none;
  visibility: hidden;
  height: 0;
  z-index: -10;
  overflow: hidden;
}

@media only screen and (max-width: 320px) {
  .nav {
    #{&}-links {
      span {
        padding: 0;
      }
    }
  }
}

@media only screen and (max-width: 600px) {
  [data-search] {
    display: none;
  }
}

@media only screen and (max-width: 1000px) {
  [data-signIn] {
    display: none;
  }
}
